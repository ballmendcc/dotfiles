---
- name: Ensure curl wget gpg and gnupg are installed
  become: yes
  apt:
    name:
      - curl
      - gnupg
      - wget
      - gpg
    state: present
    update_cache: yes

# Gnome Shell Extentions

- name: Ensure Gnome Shell Extentions are installed
  become: yes
  apt:
    name:
      - gnome-shell
      - gnome-shell-extension-manager
      - gnome-shell-extension-prefs
    state: present
    update_cache: yes

# SPOTIFY

- name: Download Spotify GPG key
  get_url:
    url: https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg
    dest: /tmp/spotify.gpg

- name: Add Spotify GPG key
  become: yes
  command: gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg /tmp/spotify.gpg
  register: gpg_key
  changed_when: gpg_key.rc == 0

- name: Add Spotify repository
  become: yes
  apt_repository:
    repo: "deb http://repository.spotify.com stable non-free"
    filename: spotify
    state: present

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Install Spotify
  become: yes
  apt:
    name: spotify-client
    state: present

- name: Remove temporary GPG key file
  file:
    path: /tmp/spotify.gpg
    state: absent

# VSCODE

- name: Download Microsoft GPG key
  get_url:
    url: https://packages.microsoft.com/keys/microsoft.asc
    dest: /tmp/microsoft.asc

- name: Convert GPG key to the required format and move to /etc/apt/keyrings/
  become: yes
  command: >
    gpg --dearmor -o /etc/apt/keyrings/packages.microsoft.gpg /tmp/microsoft.asc
  args:
    creates: /etc/apt/keyrings/packages.microsoft.gpg

- name: Add VSCode repository
  become: yes
  apt_repository:
    repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
    filename: vscode
    state: present

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Install Visual Studio Code
  become: yes
  apt:
    name: code
    state: present

- name: Clean up temporary files
  become: yes
  file:
    path: "/tmp/{{ item }}"
    state: absent
  loop:
    - microsoft.asc

# BRAVE

- name: Add Brave GPG key
  get_url:
    url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    dest: /tmp/brave-browser-archive-keyring.gpg

- name: Install Brave GPG key
  become: yes
  copy:
    src: /tmp/brave-browser-archive-keyring.gpg
    dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg
    owner: root
    group: root
    mode: "0644"

- name: Add Brave repository
  become: yes
  lineinfile:
    path: /etc/apt/sources.list.d/brave-browser-release.list
    line: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"
    create: yes

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Install Brave browser
  become: yes
  apt:
    name: brave-browser
    state: present

- name: Remove temporary GPG key file
  file:
    path: /tmp/brave-browser-archive-keyring.gpg
    state: absent

# NEXTCLOUD

- name: Add Nextcloud client repository
  become: yes
  apt_repository:
    repo: ppa:nextcloud-devs/client
    state: present

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes

- name: Install Nextcloud client
  become: yes
  apt:
    name: nextcloud-desktop
    state: present
    update_cache: yes

# NORDVPN

- name: Ensure Snap is installed
  become: yes
  ansible.builtin.apt:
    name: snapd
    state: present

- name: Install NordVPN
  become: yes
  ansible.builtin.command:
    cmd: snap install nordvpn

# VIRTUAL BOX

- name: Download VBox GPG key
  get_url:
    url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
    dest: /tmp/oracle_vbox_2016.asc

- name: Convert GPG key to the required format and move to /etc/apt/keyrings/
  become: yes
  command: >
    gpg --yes --output /usr/share/keyrings/oracle-virtualbox-2016.gpg --dearmor /tmp/oracle_vbox_2016.asc
  args:
    creates: /usr/share/keyrings/oracle-virtualbox-2016.gpg

- name: Get Ubuntu codename
  shell: lsb_release -cs
  register: ubuntu_codename
  changed_when: false

- name: Add VBox repository
  become: yes
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian {{ ubuntu_codename.stdout }} contrib"
    filename: virtualbox
    state: present

# - name: Add Oracle public key
#   become: yes
#   apt_key:
#     url: https://www.virtualbox.org/download/oracle_vbox.asc
#     state: present

# - name: Get Ubuntu codename
#   shell: lsb_release -cs
#   register: ubuntu_codename
#   changed_when: false

# - name: Add VirtualBox repository
#   become: yes
#   apt_repository:
#     repo: "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian {{ ubuntu_codename.stdout }} contrib"
#     state: present

- name: Update package lists
  become: yes
  apt:
    update_cache: yes

- name: Install VirtualBox
  become: yes
  apt:
    name: virtualbox-7.0
    state: present
# BALENA ETCHER

# - name: Download BALENA ETCHER GPG key
#   get_url:
#     url: https://dl.cloudsmith.io/public/balena/etcher/gpg.70528471AFF9A051.key
#     dest: /tmp/balenaetcher.key

# - name: Convert GPG key to the required format and move to /etc/apt/keyrings/
#   become: yes
#   command: >
#     gpg --yes --output /usr/share/keyrings/balena-etcher.gpg --dearmor /tmp/balenaetcher.key
#   args:
#     creates: /usr/share/keyrings/balena-etcher.gpg

# - name: Add BALENA ETCHER repository
#   become: yes
#   apt_repository:
#     repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian {{ ubuntu_codename.stdout }} contrib"
#     filename: virtualbox
#     state: present

# - name: Download and run Balena Etcher setup script
#   become: yes
#   ansible.builtin.shell:
#     cmd: "curl -1sLf 'https://dl.cloudsmith.io/public/balena/etcher/setup.deb.sh' | sudo -E bash"
#   args:
#     creates: "/etc/apt/sources.list.d/balena-etcher.list"

# - name: Import Balena Etcher GPG key
#   become: yes
#   ansible.builtin.apt_key:
#     url: https://deb.etcher.io/keyring.gpg
#     state: present

# - name: Update apt cache
#   become: yes
#   ansible.builtin.apt:
#     update_cache: yes

# - name: Install Balena Etcher
#   become: yes
#   ansible.builtin.apt:
#     name: balena-etcher-electron
#     state: present
