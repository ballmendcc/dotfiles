---
- name: "ZSH | Install zsh"
  ansible.builtin.apt:
    name: zsh
    state: present
    update_cache: true
  become: true

- name: "Bash | Detect oh-my-zsh"
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.oh-my-zsh"
  register: ohmyzsh

- name: "Bash | Register oh-my-zsh state"
  ansible.builtin.set_fact:
    ohmyzsh_is_installed: "{{ ohmyzsh.stat.exists }}"

- name: "Bash | Debug ohmyzsh_is_installed"
  ansible.builtin.debug:
    var: ohmyzsh_is_installed

- name: "Bash | Install oh-my-zsh"
  when: not ohmyzsh_is_installed
  block:
    - name: "Bash | Download oh-my-zsh Install Script"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /{{ ansible_user_dir }}/oh-my-zsh.install.sh
        force: true
        mode: "0755"
      notify:
        - "Bash | Cleanup oh-my-zsh install script"

    - name: "Bash | Run the install script"
      ansible.builtin.script:
        cmd: /{{ ansible_user_dir }}/oh-my-zsh.install.sh

- name: "Bash | Copy .zshrc"
  ansible.builtin.copy:
    src: ".zshrc"
    dest: "{{ ansible_user_dir }}/.zshrc"
    mode: "0644"

- name: "Bash | Copy .zprofile"
  ansible.builtin.copy:
    src: ".zprofile"
    dest: "{{ ansible_user_dir }}/.zprofile"
    mode: "0644"

- name: "Bash | Copy custom zsh config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/"
    src: "zsh"
    mode: "0644"
    directory_mode: "0755"
    force: true

- name: "Ensure Powerlevel10k is installed"
  git:
    repo: "https://github.com/romkatv/powerlevel10k.git"
    dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
    version: master
    force: yes
  become: false

- name: "Copy old .p10k.zsh configuration"
  copy:
    src: "themes/.p10k.zsh"
    dest: "{{ ansible_user_dir }}/.p10k.zsh"
    mode: "0644"
  become: false

- name: "Update .zshrc to use Powerlevel10k"
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    regexp: "^ZSH_THEME="
    line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
    state: present
  become: false

- name: "Ensure .p10k.zsh is sourced in .zshrc"
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    regexp: '^\[\[ -f ~/.p10k.zsh \]\] && source ~/.p10k.zsh'
    line: "[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh"
    state: present
  become: false

- name: "Reload Zsh configuration"
  command: "zsh -c 'source ~/.zshrc'"
  become: false

- name: "Bash | Set default terminal"
  ansible.builtin.user:
    name: "{{ host_user }}"
    shell: /usr/bin/zsh
  become: true

# - name: "Bash | Set private variables"
#   ansible.builtin.template:
#     dest: "{{ ansible_user_dir }}/.config/bash/.bash_private"
#     src: ".bash_private.j2"
#     mode: "0644"
#   no_log: true

# - name: "Bash | Copy Private Files"
#   ansible.builtin.lineinfile:
#     name: "~/.openai.apikey"
#     line: "{{ bash_private.OPENAI_KEY }}"
#     create: true
#     mode: "0600"
#     state: present

- name: "Bash | {{ ansible_distribution }} | Identify distribution config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_distribution }}"
  register: zsh_os_distribution_config

- name: "Bash | {{ ansible_os_family }} | Identify os family config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_os_family }}"
  register: zsh_os_family_config
  when: not zsh_os_distribution_config.stat.exists

- name: "Bash | Calculate os config src"
  ansible.builtin.set_fact:
    zsh_os_config: "{{ zsh_os_distribution_config if zsh_os_distribution_config.stat.exists else bash_os_family_config }}"

- name: "Bash | Copy custom zsh config for os: {{ zsh_os_config.stat.path | basename }}"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/zsh/"
    src: "{{ zsh_os_config.stat.path }}/"
    mode: "0644"
    force: true
  when:
    - zsh_os_config is defined
    - zsh_os_config.stat.exists

# ZSH PLUGINS

- name: Clone zsh-autosuggestions
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    version: main

- name: Clone zsh-syntax-highlighting
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting
    dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    version: main

- name: Clone zsh-navigation-tools
  git:
    repo: https://github.com/psprint/zsh-navigation-tools
    dest: ~/.oh-my-zsh/custom/plugins/zsh-navigation-tools
    version: master

- name: Clone zsh-history-substring-search
  git:
    repo: https://github.com/zsh-users/zsh-history-substring-search
    dest: ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
    version: master

- name: Clone fzf-zsh-plugin
  git:
    repo: https://github.com/unixorn/fzf-zsh-plugin
    dest: ~/.oh-my-zsh/custom/plugins/fzf-zsh-plugin
    version: master

- name: Clone zsh-bat
  git:
    repo: https://github.com/foxlets/zsh-bat
    dest: ~/.oh-my-zsh/custom/plugins/zsh-bat
    version: master

- name: Clone asdf
  git:
    repo: https://github.com/asdf-vm/asdf
    dest: ~/.oh-my-zsh/custom/plugins/asdf
    version: master

- name: Reload Zsh config
  shell: source ~/.zshrc
  args:
    executable: /bin/zsh
